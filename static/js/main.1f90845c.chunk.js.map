{"version":3,"sources":["App.js","index.js"],"names":["marked","require","setOptions","breaks","App","props","handleChange","e","setState","markdown","target","value","state","className","FormGroup","controlId","FormControl","as","id","rows","this","onChange","bind","dangerouslySetInnerHTML","__html","href","rel","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAMMA,EAASC,EAAQ,IACvBD,EAAOE,WAAW,CAChBC,QAAQ,I,IAsFKC,E,kDAnFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAoDRC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,SAAUF,EAAEG,OAAOC,SApDnC,EAAKC,MAAQ,CACXH,SAAS,8zCAHM,E,qDAyDjB,OACE,6BACE,yBAAKI,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,kBAACC,EAAA,EAAD,CAAWC,UAAU,yBACnB,kBAAC,IAAD,CAAcF,UAAU,SAAxB,UACA,kBAACG,EAAA,EAAD,CAAaC,GAAG,WAAWC,GAAG,SAASC,KAAK,KAAKR,MAAOS,KAAKR,MAAMH,SAAUY,SAAUD,KAAKd,aAAagB,KAAKF,UAGlH,yBAAKP,UAAU,UACb,yBAAKA,UAAU,SAAf,WACA,yBAAKK,GAAG,UAAUK,wBAAyB,CAAEC,OAAQxB,EAAOoB,KAAKR,MAAMH,gBAI7E,qCAAW,IACT,uBAAGgB,KAAK,iCACNf,OAAO,SACPgB,IAAI,uBAFN,qB,GA3EQC,aCNlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1f90845c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport ControlLabel from 'react-bootstrap/FormLabel';\nimport FormControl from 'react-bootstrap/FormControl';\n\nconst marked = require('marked');\nmarked.setOptions({\n  breaks: true,\n});\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown:\n        `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n        \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n      \n\\`\\`\\`\n// this is multi-line code:\n      \nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n    }\n  }\n\\`\\`\\`\n        \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n      \nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n      \nAnd if you want to get really crazy, even tables:\n      \nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n      \n- And of course there are lists.\n  - Some are bulleted.\n    - With different indentation levels.\n      - That look like this.\n      \n      \n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n      \n![React Logo w/ Text](https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/640px-React-icon.svg.png)\n`\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ markdown: e.target.value });\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm\">\n              <FormGroup controlId=\"formControlIsTextArea\">\n                <ControlLabel className=\"label\">Editor</ControlLabel>\n                <FormControl as=\"textarea\" id=\"editor\" rows=\"10\" value={this.state.markdown} onChange={this.handleChange.bind(this)}></FormControl>\n              </FormGroup>\n            </div>\n            <div className=\"col-sm\">\n              <div className=\"label\">Preview</div>\n              <div id=\"preview\" dangerouslySetInnerHTML={{ __html: marked(this.state.markdown) }} />\n            </div>\n          </div>\n        </div>\n        <footer>by{' '}\n          <a href=\"https://github.com/eljoedeleon\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">eljoedeleon</a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}